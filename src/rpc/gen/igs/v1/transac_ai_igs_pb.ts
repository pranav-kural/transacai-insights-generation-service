// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file igs/v1/transac_ai_igs.proto (package igs.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Request parameters for GenerateInsights
 *
 * @generated from message igs.v1.GenerateInsightsRequest
 */
export class GenerateInsightsRequest extends Message<GenerateInsightsRequest> {
  /**
   * @generated from field: string req_id = 1;
   */
  reqId = "";

  /**
   * @generated from field: string client_id = 2;
   */
  clientId = "";

  /**
   * @generated from field: int32 prompt_id = 3;
   */
  promptId = 0;

  /**
   * @generated from field: string records_source_id = 4;
   */
  recordsSourceId = "";

  /**
   * @generated from field: string prompt_templates_source_id = 5;
   */
  promptTemplatesSourceId = "";

  /**
   * @generated from field: string from_time = 6;
   */
  fromTime = "";

  /**
   * @generated from field: string to_time = 7;
   */
  toTime = "";

  constructor(data?: PartialMessage<GenerateInsightsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "igs.v1.GenerateInsightsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "req_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "prompt_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "records_source_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "prompt_templates_source_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "from_time", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "to_time", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateInsightsRequest {
    return new GenerateInsightsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateInsightsRequest {
    return new GenerateInsightsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateInsightsRequest {
    return new GenerateInsightsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateInsightsRequest | PlainMessage<GenerateInsightsRequest> | undefined, b: GenerateInsightsRequest | PlainMessage<GenerateInsightsRequest> | undefined): boolean {
    return proto3.util.equals(GenerateInsightsRequest, a, b);
  }
}

/**
 * @generated from message igs.v1.GenerateInsightsResponse
 */
export class GenerateInsightsResponse extends Message<GenerateInsightsResponse> {
  /**
   * @generated from field: bool received = 1;
   */
  received = false;

  constructor(data?: PartialMessage<GenerateInsightsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "igs.v1.GenerateInsightsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "received", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateInsightsResponse {
    return new GenerateInsightsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateInsightsResponse {
    return new GenerateInsightsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateInsightsResponse {
    return new GenerateInsightsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateInsightsResponse | PlainMessage<GenerateInsightsResponse> | undefined, b: GenerateInsightsResponse | PlainMessage<GenerateInsightsResponse> | undefined): boolean {
    return proto3.util.equals(GenerateInsightsResponse, a, b);
  }
}

